{"ast":null,"code":"import io from 'socket.io-client';\n\nclass Socket {\n  constructor() {\n    this.socket = void 0;\n  }\n\n  send() {\n    this.socket.emit('message', 'hi');\n  }\n\n  connect(room) {\n    if (this.socket && this.socket.connected) {\n      return;\n    }\n\n    this.socket = io('http://localhost:8080');\n    return new Promise(resolve => {\n      this.socket.on('connect', () => {\n        let socketId = this.socket.io.engine.id;\n        this.socket.emit('subscribe', {\n          room: room,\n          socketId: socketId\n        });\n        /*  this.socket.on('new user', (data)=>{\n              this.socket.emit('newUserStart', {to:data.socketId, sender:socketId});\n              pc.push(data.socketId);\n              init(true, data.socketId);\n          });*/\n\n        resolve(this.socket);\n      });\n    });\n  }\n\n  disconnect() {\n    this.socket.emit('disconnect');\n    this.socket.close();\n  }\n\n}\n\nconst instance = new Socket();\nexport default instance;","map":{"version":3,"sources":["/home/rimkus/WebstormProjects/UVIID/front/src/Socket.tsx"],"names":["io","Socket","socket","send","emit","connect","room","connected","Promise","resolve","on","socketId","engine","id","disconnect","close","instance"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;;AAGA,MAAOC,MAAP,CAAc;AAAA;AAAA,SACFC,MADE;AAAA;;AAGVC,EAAAA,IAAI,GAAG;AACH,SAAKD,MAAL,CAAYE,IAAZ,CAAiB,SAAjB,EAA4B,IAA5B;AACH;;AAEDC,EAAAA,OAAO,CAACC,IAAD,EAAgB;AACnB,QAAI,KAAKJ,MAAL,IAAe,KAAKA,MAAL,CAAYK,SAA/B,EAA0C;AACtC;AACH;;AACD,SAAKL,MAAL,GAAcF,EAAE,CAAC,uBAAD,CAAhB;AACA,WAAO,IAAIQ,OAAJ,CAAYC,OAAO,IAAI;AAC1B,WAAKP,MAAL,CAAYQ,EAAZ,CAAe,SAAf,EAA0B,MAAM;AAC5B,YAAIC,QAAQ,GAAG,KAAKT,MAAL,CAAYF,EAAZ,CAAeY,MAAf,CAAsBC,EAArC;AAEA,aAAKX,MAAL,CAAYE,IAAZ,CAAiB,WAAjB,EAA8B;AAC1BE,UAAAA,IAAI,EAAEA,IADoB;AAE1BK,UAAAA,QAAQ,EAAEA;AAFgB,SAA9B;AAKF;;;;;;AAMEF,QAAAA,OAAO,CAAC,KAAKP,MAAN,CAAP;AACH,OAfD;AAgBH,KAjBM,CAAP;AAkBH;;AAEDY,EAAAA,UAAU,GAAG;AACT,SAAKZ,MAAL,CAAYE,IAAZ,CAAiB,YAAjB;AACA,SAAKF,MAAL,CAAYa,KAAZ;AACH;;AAnCS;;AAsCd,MAAMC,QAAQ,GAAG,IAAIf,MAAJ,EAAjB;AACA,eAAee,QAAf","sourcesContent":["import io from 'socket.io-client'\n\n\nclass  Socket {\n    private socket : any;\n\n    send() {\n        this.socket.emit('message', 'hi');\n    }\n\n    connect(room : string) {\n        if (this.socket && this.socket.connected) {\n            return ;\n        }\n        this.socket = io('http://localhost:8080');\n        return new Promise(resolve => {\n            this.socket.on('connect', () => {\n                let socketId = this.socket.io.engine.id;\n\n                this.socket.emit('subscribe', {\n                    room: room,\n                    socketId: socketId\n                });\n\n              /*  this.socket.on('new user', (data)=>{\n                    this.socket.emit('newUserStart', {to:data.socketId, sender:socketId});\n                    pc.push(data.socketId);\n                    init(true, data.socketId);\n                });*/\n\n                resolve(this.socket);\n            });\n        });\n    }\n\n    disconnect() {\n        this.socket.emit('disconnect');\n        this.socket.close();\n    }\n}\n\nconst instance = new Socket();\nexport default instance\n"]},"metadata":{},"sourceType":"module"}
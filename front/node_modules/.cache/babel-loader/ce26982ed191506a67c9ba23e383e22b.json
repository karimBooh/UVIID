{"ast":null,"code":"const userInfos = {\n  pc: new Map(),\n  stream: MediaStream\n};\nexport default ((state = userInfos, action) => {\n  switch (action.type) {\n    case \"ADD_PC\":\n      return {\n        pc: action.pc\n      };\n\n    case \"ADD_STREAM\":\n      return {\n        stream: action.stream\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/rimkus/WebstormProjects/UVIID/front/src/redux/reducer/pc.ts"],"names":["userInfos","pc","Map","stream","MediaStream","state","action","type"],"mappings":"AAIA,MAAMA,SAAS,GAAG;AACdC,EAAAA,EAAE,EAAE,IAAIC,GAAJ,EADU;AAEdC,EAAAA,MAAM,EAAEC;AAFM,CAAlB;AAMA,gBAAe,CAACC,KAAK,GAAGL,SAAT,EAAoBM,MAApB,KAAoC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAO;AACHN,QAAAA,EAAE,EAAEK,MAAM,CAACL;AADR,OAAP;;AAGJ,SAAK,YAAL;AACI,aAAO;AACHE,QAAAA,MAAM,EAAEG,MAAM,CAACH;AADZ,OAAP;;AAGJ;AACI,aAAOE,KAAP;AAVR;AAYH,CAbD","sourcesContent":["interface IHash {\n    [socketid: string]: RTCPeerConnection\n}\n\nconst userInfos = {\n    pc: new Map<string, RTCPeerConnection>(),\n    stream: MediaStream,\n\n};\n\nexport default (state = userInfos, action: any) => {\n    switch (action.type) {\n        case \"ADD_PC\":\n            return {\n                pc: action.pc,\n            };\n        case \"ADD_STREAM\":\n            return {\n                stream: action.stream,\n            };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}